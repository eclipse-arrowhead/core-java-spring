#!/bin/bash
# postinst script for arrowhead-datamanager
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

SYSTEM_NAME="datamanager"
PKG_NAME="arrowhead-datamanager"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
  configure)
    . /usr/share/arrowhead/conf/ahconf.sh
    SYSTEM_DIR="${AH_SYSTEMS_DIR}/${SYSTEM_NAME}"

    db_get arrowhead-core-common/mysql_password_datamanager; system_passwd=$RET || true
    db_unregister arrowhead-core-common/mysql_password_datamanager

    # Generate password (if required)
    if [ -z "${system_passwd}" ]; then
      system_passwd="$(openssl rand -base64 12)"
    fi  

    echo "Configuring MySQL database..." >&2
    ah_db_tables_and_user ${SYSTEM_NAME} ${SYSTEM_NAME}_privileges.sql ${system_passwd}

    if [ ! -d "${SYSTEM_DIR}" ]; then
      mkdir -p ${SYSTEM_DIR}
    fi

    ah_cert_signed_system ${SYSTEM_NAME}

    # modify log config and application.properties

    ah_transform_log_file ${SYSTEM_DIR}

    db_get arrowhead-core-common/sr_host: sr_host=$RET || true

    if [ -z ${sr_host} ]; then
      sr_host=${OWN_IP}
    fi

    db_get arrowhead-core-common/db_host; db_host=$RET || true

    mv ${SYSTEM_DIR}/application.properties ${SYSTEM_DIR}/application.properties.orig
    cat ${SYSTEM_DIR}/application.properties.orig | \
      sed -r -e "\#^.*spring\.datasource\.url=#s#.*\$#spring.datasource.url=jdbc:mysql://"${db_host}":3306/arrowhead?serverTimezone=Europe/Budapest#"  \
      -e "\#^.*spring\.datasource\.password=#s#.*\$#spring.datasource.password=${system_passwd}#" \
      -e "\#^.*server\.address=#s#.*\$#server.address=${OWN_IP}#" \
      -e "\#^.*sr_address=#s#.*\$#sr_address=${sr_host}#" \
      -e "\#^.*server\.ssl\.key-store=#s#.*\$#server.ssl.key-store=file:${SYSTEM_DIR}/${SYSTEM_NAME}.p12#" \
      -e "\#^.*server\.ssl\.key-store-password=#s#.*\$#server.ssl.key-store-password=${AH_PASS_CERT}#" \
      -e "\#^.*server\.ssl\.key-password=#s#.*\$#server.ssl.key-password=${AH_PASS_CERT}#" \
      -e "\#^.*server\.ssl\.trust-store=#s#.*\$#server.ssl.trust-store=file:${AH_CONF_DIR}/truststore.p12#" \
      -e "\#^.*server\.ssl\.trust-store-password=#s#.*\$#server.ssl.trust-store-password=${AH_PASS_CERT}#" > ${SYSTEM_DIR}/application.properties

    rm ${SYSTEM_DIR}/application.properties.orig
    chown arrowhead:arrowhead ${SYSTEM_DIR}/application.properties
    chmod 640 ${SYSTEM_DIR}/application.properties

    echo "Starting ${PKG_NAME}..." >&2
    systemctl daemon-reload
    systemctl enable ${PKG_NAME}.service
    systemctl start ${PKG_NAME}.service
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
